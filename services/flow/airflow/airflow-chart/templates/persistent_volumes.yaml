# Dags
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: dags-pv-volume
  labels:
    type: local
spec:
  storageClassName: nfs
  capacity:
    storage: "50Mi"
  accessModes:
    - ReadWriteMany
  nfs:
    server: "10.152.183.15"
    path: "/workflows/dags"

  persistentVolumeReclaimPolicy: Retain
  claimRef:
    namespace: "{{ .Values.global.services_namespace }}"
    name: dags-pv-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dags-pv-claim
  namespace: "{{ .Values.global.services_namespace }}"
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: "50Mi"
  volumeName: "dags-pv-volume"
---
# logs
apiVersion: v1
kind: PersistentVolume
metadata:
  name: af-logs-pv-volume
  labels:
    type: local
spec:
  storageClassName: nfs
  capacity:
    storage: "50Mi"
  accessModes:
    - ReadWriteMany
  nfs:
    server: "10.152.183.15"
    path: "/airflow/logs"

  persistentVolumeReclaimPolicy: Retain
  claimRef:
    namespace: "{{ .Values.global.services_namespace }}"
    name: af-logs-pv-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: af-logs-pv-claim
  namespace: "{{ .Values.global.services_namespace }}"
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: "50Mi"
  volumeName: "af-logs-pv-volume"
---
# plugins
apiVersion: v1
kind: PersistentVolume
metadata:
  name: af-plugins-pv-volume
  labels:
    type: local
spec:
  storageClassName: nfs
  capacity:
    storage: "50Mi"
  accessModes:
    - ReadWriteMany
  nfs:
    server: "10.152.183.15"
    path: "/workflows/plugins"

  persistentVolumeReclaimPolicy: Retain
  claimRef:
    namespace: "{{ .Values.global.services_namespace }}"
    name: af-plugins-pv-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: af-plugins-pv-claim
  namespace: "{{ .Values.global.services_namespace }}"
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: "50Mi"
  volumeName: "af-plugins-pv-volume"
---
# models
apiVersion: v1
kind: PersistentVolume
metadata:
  name: models-pv-volume
  labels:
    type: local
spec:
  storageClassName: nfs
  capacity:
    storage: "500Mi"
  accessModes:
    - ReadWriteMany
  nfs:
    server: "10.152.183.15"
    path: "/workflows/models"
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    namespace: "{{ .Values.global.services_namespace }}"
    name: models-pv-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: models-pv-claim
  namespace: "{{ .Values.global.services_namespace }}"
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: "50Mi"
  volumeName: "models-pv-volume"
---
# data-services
apiVersion: v1
kind: PersistentVolume
metadata:
  name: af-data-pv-volume
  labels:
    type: local
spec:
  storageClassName: nfs
  capacity:
    storage: "500Mi"
  accessModes:
    - ReadWriteMany
  nfs:
    server: "10.152.183.15"
    path: "/workflows/data"
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    namespace: "{{ .Values.global.services_namespace }}"
    name: af-data-pv-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: af-data-pv-claim
  namespace: "{{ .Values.global.services_namespace }}"
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: "50Mi"
  volumeName: "af-data-pv-volume"
---
