kind: Service
apiVersion: v1
metadata:
  name: tensorboard{{- if .Values.multi_instance_suffix }}-{{ .Values.multi_instance_suffix }}{{- end }}
  namespace: {{ .Values.global.base_namespace }}
spec:
  selector:
    app-name: tensorboard{{- if .Values.multi_instance_suffix }}-{{ .Values.multi_instance_suffix }}{{- end }}
  ports:
    - protocol: TCP
      port: 6006
      #nodePort: 8010
      name: log-http-port
  type: ClusterIP
  #type: NodePort
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: tensorboard{{- if .Values.multi_instance_suffix }}-{{ .Values.multi_instance_suffix }}{{- end }}
  namespace: {{ .Values.global.base_namespace }}
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.middlewares: kube-system-errorpages@kubernetescrd
    traefik.ingress.kubernetes.io/preserve-host: "true"
    # ingress.kubernetes.io/custom-request-headers: "Authorization:||cookie:"
    # nginx.ingress.kubernetes.io/enable-cors: "true"
    # nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS"
    # nginx.ingress.kubernetes.io/cors-allow-origin: "https://vm-129-41.cloud.dkfz-heidelberg.de/oauth/"
    # nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    #traefik.frontend.rule.type: PathPrefixStrip
spec:
  rules:
  - host: 
    http:
      paths:
      - path: {{ .Values.ingress_path }}
        backend:
          serviceName: tensorboard{{- if .Values.multi_instance_suffix }}-{{ .Values.multi_instance_suffix }}{{- end }}
          servicePort: log-http-port