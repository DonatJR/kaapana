---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-helm-deployment
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app-name: kube-helm
  template:
    metadata:
      labels:
        app-name: kube-helm
    spec:
      hostNetwork: true
      containers:
      - name: kube-helm
        image: {{  .Values.global.registry_url }}{{  .Values.global.registry_project }}/kube-helm:1.0-vdev
        imagePullPolicy:  Always
        resources:
          limits:
            memory: "1Gi"
          requests:
            memory: "100Mi"
        #imagePullPolicy:  {{ .Values.global.pull_policy_pods }}
        env: # Environment variables
        - name: SECRET_KEY
          value: jip-secret
        - name: HELLO_WORLD_USER
          value: jip-user
        - name: APPLICATION_ROOT
          value: "/kube-helm-api"
        - name: HELM_PATH
          value: "/usr/local/bin/helm"
        ports: # Port(s) on which your application runs
          - containerPort: 5000
        volumeMounts:
          - name: kubeconfig # must match the volume name, above
            mountPath: "/root/.kube"
          - name: helmconfig # must match the volume name, above
            mountPath: "/root/.config/helm"
          - name: helmcache # must match the volume name, above
            mountPath: "/root/.cache/helm"
          - name: helmlocal
            mountPath: "/root/.local/share/helm"
      volumes:
      - name: kubeconfig
        hostPath:
          path: {{ .Values.global.home_dir }}/.kube
          type: DirectoryOrCreate
      - name: helmconfig
        hostPath:
          path: {{ .Values.global.home_dir }}/.config/helm
          type: DirectoryOrCreate
      - name: helmcache
        hostPath:
          path: {{ .Values.global.home_dir }}/.cache/helm
          type: DirectoryOrCreate
      - name: helmlocal
        hostPath:
          path: {{ .Values.global.home_dir }}/.local/share/helm
          type: DirectoryOrCreate
      imagePullSecrets:
      - name: camic-registry
---